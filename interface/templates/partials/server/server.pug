- load interface_utils
- load i18n

.item.pure-u-1-1.pure-g.second
  input.hidden.uuid(type='hidden', value=data.id)
  .heading.flex
    span= data.name
    .spacer
    .icons
      .action
        i(data-feather='edit-2', onclick="window.api.edit('server', this)")
      .action
        i(data-feather='trash-2', onclick="window.api.remove('server', this)")

  .pure-u-1-1
    .row.overview.item.pure-g
      .section.icon.pure-u-1-2.pure-u-lg-1-3.game(data-value=data.game)
        i(data-feather='compass')
        span.content= data.get_game_display
      .section.icon.pure-u-1-2.pure-u-lg-1-3.gamemode
        i(data-feather='briefcase')
        span.content
          if data.mode is not None
            = data.mode
          else
            | ----
      .section.icon.pure-u-1-2.pure-u-lg-1-3
        i(data-feather='map')
        span.content= data.executed.status.stats.map
      .section.icon.pure-u-1-2.pure-u-lg-1-3.network
        i(data-feather='wifi')
        span.content
          =data.ip|add:":"
          =data.port
      .section.icon.pure-u-1-2.pure-u-lg-1-3.password
        i(data-feather='lock')
        span.content ********
      .section.icon.pure-u-1-2.pure-u-lg-1-3
        i(data-feather='shield')
        span.content
          if data.vac
            | VAC
          else
            | ----
      .section.icon.pure-u-1-2.pure-u-lg-1-3
        i(data-feather='layers')
        span.content
          if data.game == "csgo"
            = data.executed.status.stats.scores.CT
            |  -
            = data.executed.status.stats.scores.TERRORIST
          else
            | {% trans "Not Supported" %}
      .section.icon.pure-u-1-2.pure-u-lg-1-3
        i(data-feather='users')
        span.content= data.executed.status.stats.online
      .section.icon.pure-u-1-2.pure-u-lg-1-3
        i(data-feather='clock')
        span.content
          if data.executed.status.stats.uptime is None
            i.bpi-unlimited.em2
          else
            =data.executed.status.stats.uptime|duration

  .row.add.pure-g
    .pure-u-1-1.relative
      .container.flex.center.column(style="width:100%;margin-bottom: 1em;")
        pre.code.code-command.input(data-placeholder="{% trans 'Enter command here...' %}", contenteditable="true", onkeypress=" return window.style.utils.verify.input('single', event, this)")
        pre.code.code-command.ro.none

      .icon.action.send-command
        i.explicit(data-feather='send', onclick="window.api.submit('server__execute', this)")

    .pure-u-1-2.chart-section
      .ct-chart.ct-minor-seventh(id="chart-{{data.id}}")
      .ct-info
        .info
          .spacer
          span.number= data.executed.count.last30.active|stringformat:"02d"
          .description
            .content {% trans "last" %}
            .content {% trans "month" %}
          .spacer
        .info
          .spacer
          span.number= data.executed.count.ever.active|stringformat:"02d"
          .description
            .content {% trans "all" %}
            .content {% trans "time" %}
          .spacer
      script.execution.server.
        var data = {
          labels: {{ data.executed.online|dict_to_list:'date'|safe }},
          series: [
            {{ data.executed.online|dict_to_list:'active'|safe }}
          ]
        };
        var options = {
          showPoint: false,
          axisX: {
              showGrid: false,
          },
          axisY: {
              position: 'end',
              onlyInteger: true,
          },
          fullWidth: true,
          low: 0
        }
        new Chartist.Line("#chart-{{data.id}}", data, options);
    .pure-u-1-2.pure-g
      = data.executed.status.players
      each i in data.executed.status.players
        - include 'partials/server/online.pug' with data=i server=data
